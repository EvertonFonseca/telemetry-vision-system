-- =========================================================
-- CONFIG INICIAL
-- =========================================================
SET NAMES utf8mb4;
SET time_zone = '+00:00';
SET sql_safe_updates = 0;

-- Ativa agendador (requer privilégio adequado)
SET GLOBAL event_scheduler = ON;

-- =========================================================
-- DROP ORDEM CORRETA (respeitando FKs)
-- =========================================================
DROP EVENT       IF EXISTS AG_BY_1_DAY;
DROP PROCEDURE   IF EXISTS PR_CLEAR_OLD_DATAS;

DROP TABLE IF EXISTS ATRIBUTO;
DROP TABLE IF EXISTS COMPONENTE;
DROP TABLE IF EXISTS ESTRUTURA_CONFIG;
DROP TABLE IF EXISTS ESTRUTURA;
DROP TABLE IF EXISTS FRAME_CAMERA;
DROP TABLE IF EXISTS CAMERA_CONFIG;
DROP TABLE IF EXISTS OBJETO_CONTEXTO;
DROP TABLE IF EXISTS OBJETO_CONFIG;
DROP TABLE IF EXISTS OBJETO;
DROP TABLE IF EXISTS OBJETO_TIPO;
DROP TABLE IF EXISTS AGENDA_SETOR;
DROP TABLE IF EXISTS CAMERA_VIEW;
DROP TABLE IF EXISTS TIPO_DATA;
DROP TABLE IF EXISTS PLOT_TOOLS;
DROP TABLE IF EXISTS PLOT_TOOLS_ITEMS;
DROP TABLE IF EXISTS PLOT_TOOLS_PARAMETRO;
DROP TABLE IF EXISTS PLOT;
DROP TABLE IF EXISTS TIPO_PLOT;
DROP TABLE IF EXISTS SETOR;

-- =========================================================
-- CRIAÇÃO DE TABELAS (InnoDB + utf8mb4)
-- =========================================================
CREATE TABLE IF NOT EXISTS SETOR (
  CD_ID_SETOR                   INT          NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME_SETOR                    VARCHAR(50)  NOT NULL,
  TEMPO_REATIVAR_SETOR          INT          NOT NULL,
  TEMPO_REATIVAR_UNIDADE_SETOR  VARCHAR(50)  NOT NULL,   -- ex: 'MINUTE','HOUR','DAY'
  TEMPO_PASSADO_SETOR           INT          NOT NULL,
  TEMPO_PASSADO_UNIDADE_SETOR   VARCHAR(50)  NOT NULL,   -- ex: 'MINUTE','HOUR','DAY'
  CD_ID_USER                    INT,
  FG_ATIVO                      BOOLEAN      DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS AGENDA_SETOR (
  CD_ID_AGENDA_SETOR  INT           NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME_AGENDA_SETOR   VARCHAR(100)  NOT NULL,
  DT_HR_LOCAL_BEGIN   TIMESTAMP     NOT NULL,
  DT_HR_LOCAL_END     TIMESTAMP     NULL,
  CD_ID_SETOR         INT           NOT NULL,
  CONSTRAINT fk_agenda_setor
    FOREIGN KEY (CD_ID_SETOR) REFERENCES SETOR(CD_ID_SETOR)
    ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Câmeras
CREATE TABLE IF NOT EXISTS CAMERA_VIEW (
  CD_ID_CAMERA  INT           NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME_CAMERA   VARCHAR(100)  NOT NULL,
  URL_CAMERA    TEXT NOT NULL,
  FG_ATIVO      BOOLEAN       DEFAULT 1
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS CAMERA_CONFIG (
  CD_ID_CAMERA_HIST  INT         NOT NULL AUTO_INCREMENT PRIMARY KEY,
  CD_ID_CAMERA       INT         NOT NULL,
  FPS_CAMERA         INT         NOT NULL,
  DT_HR_LOCAL        TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_camcfg_camera
    FOREIGN KEY (CD_ID_CAMERA) REFERENCES CAMERA_VIEW(CD_ID_CAMERA)
    ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS FRAME_CAMERA (
  DATA_FRAME    LONGBLOB   NOT NULL,
  DT_HR_LOCAL   TIMESTAMP(3)  NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  CD_ID_CAMERA  INT        NOT NULL,
  CONSTRAINT fk_frame_camera
    FOREIGN KEY (CD_ID_CAMERA) REFERENCES CAMERA_VIEW(CD_ID_CAMERA)
    ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Tipos de objeto
CREATE TABLE IF NOT EXISTS OBJETO_TIPO (
  CD_ID_OBJETO_TIPO  INT           NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME_OBJETO_TIPO   VARCHAR(100)  NOT NULL,
  DS_OBJETO_TIPO     TEXT          NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Objetos
CREATE TABLE IF NOT EXISTS OBJETO (
  CD_ID_OBJETO       INT           NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME_OBJETO        VARCHAR(100)  NOT NULL,
  CD_ID_SETOR        INT           NOT NULL,
  FG_ATIVO           BOOLEAN       DEFAULT 1,
  CD_ID_OBJETO_TIPO  INT           NOT NULL,
  CONSTRAINT fk_obj_setor
    FOREIGN KEY (CD_ID_SETOR) REFERENCES SETOR(CD_ID_SETOR)
    ON DELETE CASCADE,
  CONSTRAINT fk_obj_tipo
    FOREIGN KEY (CD_ID_OBJETO_TIPO) REFERENCES OBJETO_TIPO(CD_ID_OBJETO_TIPO)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS OBJETO_CONFIG(
  CD_ID_OBJ_CONF INT          NOT NULL AUTO_INCREMENT PRIMARY KEY,
  DESCRICAO_OBJ_CONF TEXT DEFAULT "",
  DT_HR_LOCAL   TIMESTAMP     DEFAULT CURRENT_TIMESTAMP,
  FG_TRAIN      BOOLEAN       DEFAULT 0,
  CD_ID_OBJETO  INT NOT NULL,
  CONSTRAINT fk_obj_config
    FOREIGN KEY (CD_ID_OBJETO) REFERENCES OBJETO(CD_ID_OBJETO)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Estrutura
CREATE TABLE IF NOT EXISTS ESTRUTURA (
  CD_ID_ESTRUTURA INT  NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME_ESTRUTURA  TEXT NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Estrutura Config
CREATE TABLE IF NOT EXISTS ESTRUTURA_CONFIG (
  CD_ID_ESTRUTURA_CONFIG INT  NOT NULL AUTO_INCREMENT PRIMARY KEY,
  DESCRICAO_ESTRUTURA_CONF TEXT DEFAULT "",
  DT_HR_LOCAL TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CD_ID_ESTRUTURA INT  NOT NULL,
  CONSTRAINT fk_estrutura_config
  FOREIGN KEY (CD_ID_ESTRUTURA) REFERENCES ESTRUTURA(CD_ID_ESTRUTURA)
  ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Componentes do objeto
CREATE TABLE IF NOT EXISTS COMPONENTE (
  CD_ID_COMPONENTE   INT           NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME_COMPONENTE    VARCHAR(100)  NOT NULL,
  POLIGNO_COMPONENTE TEXT NOT NULL,
  CD_ID_OBJ_CONF     INT NOT NULL,
  CD_ID_CAMERA       INT NOT NULL,
  CD_ID_ESTRUTURA    INT NOT NULL,
  CONSTRAINT fk_comp_obj
    FOREIGN KEY (CD_ID_OBJ_CONF) REFERENCES OBJETO_CONFIG(CD_ID_OBJ_CONF)
    ON DELETE CASCADE,
  CONSTRAINT fk_comp_camera
    FOREIGN KEY (CD_ID_CAMERA) REFERENCES CAMERA_VIEW(CD_ID_CAMERA),
  CONSTRAINT fk_config_estutura
    FOREIGN KEY (CD_ID_ESTRUTURA) REFERENCES ESTRUTURA(CD_ID_ESTRUTURA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Tipos de dado (qualitativo/quantitativo etc.)
CREATE TABLE IF NOT EXISTS TIPO_DATA (
  CD_ID_DATA  INT           NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME_DATA   VARCHAR(100)  NOT NULL,
  R_DATA      TEXT          NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Atributos
CREATE TABLE IF NOT EXISTS ATRIBUTO (
  CD_ID_ATRIBUTO    INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  CD_ID_ESTRUTURA_CONFIG   INT  NOT NULL,
  NAME_ATRIBUTO     VARCHAR(100)  NOT NULL,
  CLASSE_ATRIBUTO   TEXT DEFAULT  NULL,
  FG_ATIVO          BOOLEAN       DEFAULT 0,
  CD_ID_DATA        INT           NOT NULL,
  CONSTRAINT fk_attr_data
    FOREIGN KEY (CD_ID_DATA) REFERENCES TIPO_DATA(CD_ID_DATA),
  CONSTRAINT fk_attr_comp
    FOREIGN KEY (CD_ID_ESTRUTURA_CONFIG) REFERENCES ESTRUTURA_CONFIG(CD_ID_ESTRUTURA_CONFIG)
    ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Contexto do objeto
CREATE TABLE IF NOT EXISTS OBJETO_CONTEXTO (
  CD_ID_OC     INT   NOT NULL AUTO_INCREMENT PRIMARY KEY,
  DATA_OC      TEXT  NOT NULL,
  CD_ID_OBJETO INT   NOT NULL,
  DT_HR_LOCAL  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_objcontext_obj
    FOREIGN KEY (CD_ID_OBJETO) REFERENCES OBJETO(CD_ID_OBJETO)
    ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS TIPO_PLOT(
    CD_ID_TIPO  INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NAME_TIPO   TEXT NOT NULL UNIQUE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS PLOT_TOOLS_PARAMETRO(
    CD_ID_PTP        INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    DESCRICAO_PTP    TEXT
	 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
	 
CREATE TABLE IF NOT EXISTS PLOT_TOOLS_ITEMS(
  CD_ID_PTI  INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
  CD_ID_TIPO INTEGER,
  CD_ID_PTP  INTEGER,
  FOREIGN KEY (CD_ID_PTP)  REFERENCES PLOT_TOOLS_PARAMETRO(CD_ID_PTP),
  FOREIGN KEY (CD_ID_TIPO) REFERENCES TIPO_PLOT(CD_ID_TIPO)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- TABELA DE PLOT
CREATE TABLE IF NOT EXISTS PLOT(
  CD_ID_PLOT        INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
  TITLE_PLOT        VARCHAR(50),
  TEXT_X_PLOT       VARCHAR(50),
  TEXT_Y_PLOT       VARCHAR(50),
  TEXT_LEGEND_PLOT  VARCHAR(100) NOT NULL,
  WIDTH_PLOT        INTEGER DEFAULT 6,
  ORDEM_PLOT        INTEGER,
  FLAG_ACTIVE       BOOL DEFAULT TRUE,
  CD_ID_TIPO        INTEGER NOT NULL,
  CD_ID_SETOR       INTEGER NOT NULL,
  TIPO_Y_DATA       VARCHAR(50),
  TIPO_X_DATA       VARCHAR(50),
  FOREIGN KEY (CD_ID_TIPO)  REFERENCES TIPO_PLOT(CD_ID_TIPO),
  FOREIGN KEY (CD_ID_SETOR) REFERENCES SETOR(CD_ID_SETOR) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=UTF8MB4;

CREATE TABLE IF NOT EXISTS PLOT_TOOLS(
    CD_ID_PT     INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NAME_PT      TEXT,
    SCRIPT_PT    TEXT NOT NULL,
    FLAG_ACTIVE_PT   BOOLEAN DEFAULT 1,
    CD_ID_PTP    INTEGER NOT NULL,
    CD_ID_PLOT   INTEGER NOT NULL,
    FOREIGN KEY (CD_ID_PLOT) REFERENCES PLOT(CD_ID_PLOT) ON DELETE CASCADE,
    FOREIGN KEY (CD_ID_PTP)  REFERENCES PLOT_TOOLS_PARAMETRO(CD_ID_PTP)
	 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- =========================================================
-- ÍNDICES PARA PERFORMANCE
-- =========================================================
-- FRAME_CAMERA: filtros por câmera + período, e "último frame" por câmera
ALTER TABLE FRAME_CAMERA
  ADD INDEX idx_frame_cam_dt (CD_ID_CAMERA, DT_HR_LOCAL),
  ADD INDEX idx_frame_dt (DT_HR_LOCAL);

-- CAMERA_CONFIG: pegar a config mais recente por câmera
ALTER TABLE CAMERA_CONFIG
  ADD INDEX idx_camcfg_cam_dt (CD_ID_CAMERA, DT_HR_LOCAL);

-- Joins comuns
ALTER TABLE OBJETO
  ADD INDEX idx_obj_setor (CD_ID_SETOR),
  ADD INDEX idx_obj_tipo (CD_ID_OBJETO_TIPO);

ALTER TABLE COMPONENTE
  ADD INDEX idx_comp_cam   (CD_ID_CAMERA),
  ADD INDEX idx_comp_est   (CD_ID_ESTRUTURA);

ALTER TABLE PLOT_TOOLS_ITEMS
  ADD INDEX idx_pti_tipo (CD_ID_TIPO),
  ADD INDEX idx_pti_ptp  (CD_ID_PTP);

ALTER TABLE PLOT_TOOLS
  ADD INDEX idx_pt_plot (CD_ID_PLOT),
  ADD INDEX idx_pt_ptp  (CD_ID_PTP);

ALTER TABLE ATRIBUTO
  ADD INDEX idx_attr_comp (CD_ID_ESTRUTURA_CONFIG),
  ADD INDEX idx_attr_data (CD_ID_DATA),
  ADD INDEX idx_attr_comp_ativo (CD_ID_ESTRUTURA_CONFIG, FG_ATIVO);

-- OBJETO_CONTEXTO: filtros por objeto e por data (pedido)
ALTER TABLE OBJETO_CONTEXTO
  ADD INDEX idx_oc_obj_dt (CD_ID_OBJETO, DT_HR_LOCAL),
  ADD INDEX idx_oc_dt (DT_HR_LOCAL);

-- (Opcional) evitar nomes de câmera duplicados
-- ALTER TABLE CAMERA_VIEW ADD UNIQUE KEY uk_camera_name (NAME_CAMERA);

-- =========================================================
-- CONSTRAINTS ÚNICAS PARA UPSERTS FUNCIONAREM
-- =========================================================
ALTER TABLE TIPO_DATA
  ADD UNIQUE KEY uk_tipo_data_name (NAME_DATA);

ALTER TABLE OBJETO_TIPO
  ADD UNIQUE KEY uk_objtipo_name (NAME_OBJETO_TIPO);

-- =========================================================
-- PROCEDURE DE LIMPEZA (retém N dias; usa delete em lotes)
-- =========================================================
DELIMITER $$

CREATE PROCEDURE PR_CLEAR_OLD_DATAS(IN p_keep_days INT)
BEGIN
  DECLARE v_rows INT DEFAULT 1;

  -- Deleta frames antigos em lotes para evitar long locks e binlogs grandes
  WHILE v_rows > 0 DO
    DELETE FROM FRAME_CAMERA
     WHERE DT_HR_LOCAL < (NOW() - INTERVAL p_keep_days DAY)
     LIMIT 10000;
    SET v_rows = ROW_COUNT();
  END WHILE;

  -- (Opcional) Limpar configs antigas
  -- SET v_rows = 1;
  -- WHILE v_rows > 0 DO
  --   DELETE FROM CAMERA_CONFIG
  --    WHERE DT_HR_LOCAL < (NOW() - INTERVAL p_keep_days DAY)
  --    LIMIT 10000;
  --   SET v_rows = ROW_COUNT();
  -- END WHILE;
END$$

DELIMITER ;

-- =========================================================
-- EVENTO DIÁRIO PARA LIMPEZA AUTOMÁTICA
-- =========================================================
CREATE EVENT IF NOT EXISTS AG_BY_1_DAY
  ON SCHEDULE EVERY 1 DAY
  STARTS CURRENT_TIMESTAMP + INTERVAL 1 DAY
  DO CALL PR_CLEAR_OLD_DATAS(30);

-- =========================================================
-- DADOS INICIAIS
-- =========================================================
-- TIPO_DATA
INSERT INTO TIPO_DATA (NAME_DATA, R_DATA) VALUES 
  ('QUALITATIVE','text'),
  ('QUANTITATIVE','numeric')
ON DUPLICATE KEY UPDATE NAME_DATA = VALUES(NAME_DATA), R_DATA = VALUES(R_DATA);

-- OBJETO_TIPO
INSERT INTO OBJETO_TIPO (NAME_OBJETO_TIPO, DS_OBJETO_TIPO) VALUES
  ('STATIC','text'),
  ('DYNAMIC','text')
ON DUPLICATE KEY UPDATE NAME_OBJETO_TIPO = VALUES(NAME_OBJETO_TIPO), DS_OBJETO_TIPO = VALUES(DS_OBJETO_TIPO);

INSERT INTO TIPO_PLOT (NAME_TIPO) VALUES ('Scatter');
INSERT INTO TIPO_PLOT (NAME_TIPO) VALUES ('Line');
INSERT INTO TIPO_PLOT (NAME_TIPO) VALUES ('Box');
INSERT INTO TIPO_PLOT (NAME_TIPO) VALUES ('Histogram');
INSERT INTO TIPO_PLOT (NAME_TIPO) VALUES ('Density');
INSERT INTO TIPO_PLOT (NAME_TIPO) VALUES ('Bar');
INSERT INTO TIPO_PLOT (NAME_TIPO) VALUES ('Pie chart');
INSERT INTO TIPO_PLOT (NAME_TIPO) VALUES ('Area');
INSERT INTO TIPO_PLOT (NAME_TIPO) VALUES ('Word Cloud');  

INSERT INTO PLOT_TOOLS_PARAMETRO (DESCRICAO_PTP) VALUES ('LINHA VERTICAL');    
INSERT INTO PLOT_TOOLS_PARAMETRO (DESCRICAO_PTP) VALUES ('LINHA HORIZONTAL'); 
                 
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (1,1);    
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (1,2); 
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (2,1);    
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (2,2);
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (3,1);    
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (3,2);
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (4,1);    
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (4,2);
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (5,1);    
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (5,2);
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (6,1);    
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (6,2);
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (8,1);    
INSERT INTO PLOT_TOOLS_ITEMS (CD_ID_TIPO,CD_ID_PTP) VALUES (8,2);    